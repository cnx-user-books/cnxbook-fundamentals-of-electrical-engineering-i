%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox:  0 0 296 213 
%%Title: (circuits.CNV) 
%%Creator: Canvas (7.0.2) 
%%CreationDate: (08/18/01 @ 03:09 PM) 
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ CVDict
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%EndComments
%%BeginProlog 
%%BeginResource: procset CVDict
%%Title: Deneba standard graphics
%%Version: 1.02
%%CreationDate: 10/14/99
%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserved
userdict /CVDict 200 dict put
CVDict begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
level2 not { /xshow {
0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshow
pop pop pop pop} def } if
/initialize
{CVDict
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{/sa /setstrokeadjust load def
/li /lineto load def
/mt /moveto load def
/ct /curveto load def
/lh { currentpoint exch pop lineto}bind def
/lv { currentpoint pop exch lineto}bind def}
{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind def
userdict /StrokeAdjustDict 100 dict put
StrokeAdjustDict begin
/_xl
{transform
.25 sub round .25 add exch
.25 sub round .25 add exch
itransform
}bind def
/li{ _xl lineto}bind def
/mt{ _xl moveto}bind def
/ct{ _xl curveto}bind def
/lh { dup _xl pop currentpoint exch pop lineto}bind def
/lv { dup _xl pop currentpoint pop exch lineto}bind def
/rp{_xl/cv_b xdf/cv_r xdf
_xl/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath
}bind def
end}ifelse}def
/terminate
{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}if
currentdict CVDict eq{end}if}def
/mxMax 64 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def
/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def
/scl { 72 div exch 72 div exch scale } def
/scli { 72 exch div exch 72 exch div exch scale } def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 3 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/_ds 0 def
/hct false def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/ia 0 def
/ix 0 def
/ixn 1 def
/MultipleDataSources false def 
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
CVDict /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 30 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/_cv_mh{currentpoint exch pop moveto}def
/_cv_mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{setgray}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix _ds image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[/_ds load /exec load /dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[/_ds load /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def
/doclutimage{/hival 255 def 
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/hascolor true def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{
level2{image}{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}ifelse}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{$i setmatrix translate scale
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
doclutimage} def
/cd{$i setmatrix translate scale
level2{_imagedict /ColorSpace get setcolorspace}if
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_imagedict begin
/ImageMatrix _imatrix def
currentdict end
doimage} def
/im{$i setmatrix translate scale 
level2{/DeviceGray setcolorspace 0 setgray}if
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_imagedict begin
%/Decode [0 1] def  
%/Width _w def
%/Height _h def
/ImageMatrix _imatrix def
currentdict end 
doimage }def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{$i setmatrix translate scale 
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_w _h false _imatrix 5 -1 roll _ds imagemask}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/rf{/_encodindex xdf
FontDirectory exch known {
findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
currentdict end
definefont pop }{pop pop}ifelse} def
/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch 
_fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{CVDict begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{boldproc} exch
mkFT pop pop pop exch pop
}ifelse }def
/mo{dup dhOdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{outproc} exch
mkFT pop pop pop exch pop
}ifelse }def
/ms{dup dhSdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{ShadChar} exch
mkFT  pop pop pop exch pop
}ifelse }def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentcolor currentcolorspace 1.0 setgray
chrst 0 0 moveto show setcolorspace setcolor
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def
/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs 
scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/DSIEndPaintProc{currentdict end}def
/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 
	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 
	/FormType 1 def /PaintProc { /pp get exec } def /pp} def
/DSIEndPaintSubProc {bind def end pD} def
/iaa {/ix ix ixn add def} def
/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def
/ias {/st0 ia ix get def iaa st0} def
/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def
/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} def
initialize
end
%%EndResource
CVDict begin 0 id 1 fd
_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put
_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
end
%%EndProlog 
%%BeginSetup 
CVDict begin

/___FN3 /Helvetica dup  dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1 }{-1} ifelse end} {pop -1} ifelse rf
0 id
1 fd
0 213 translate
300 -300 scli
%%EndSetup 
%%BeginPageSetup 
pm
%%EndPageSetup
/DeviceCMYK scs
0 0 0 1. f4
0.1250 0.1250 sp
 0 lc
 2 lj
T sa
%page rect: 1129 247 1424 459 
stm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
41.6666 fts
/___FN3 cvsf
0.668 0.5781 0.6641 0.5078 f4
F sa
22.9439 621.8012 mt
(v)  show
T sa
rtm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
42.7771 636.8012 mt
(eq) [23.17 0 ] xshow
T sa
rtm
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
2.0833 2.0833 sp
 2 lc
np
157.3601 568.8851 mt
157.3601 481.3853 li
ds
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
 0 lc
14.3 lm
 0 lj
np
157.3601 677.2182 mt
157.3601 781.3846 li
ds
rtm
stm
0 0 0 0 f4
np
54.1665 54.1665 157.3602 623.0516 ep
de
0.668 0.5781 0.6641 0.5078 f4
 2 lc
 2 lj
np
54.1665 54.1665 157.3602 623.0516 ep
ds
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
146.1776 600.9679 mt
(+)  show
T sa
rtm
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
146.1776 665.5511 mt
(\320)  show
T sa
rtm
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
2.0833 2.0833 sp
np
431.2489 480.0485 mt
351.6863 480.0485 li
339.1863 500.8818 li
314.1863 463.3819 li
289.1864 500.8818 li
268.3531 463.3819 li
255.8532 480.0485 li
158.7181 480.0485 li
ds
rtm
stm
0 0 0 1. f4
 0 lc
14.3 lm
 0 lj
np
158.7181 782.8922 mt
431.2489 782.8922 li
ds
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
266.2283 541.0173 mt
(R)  show
T sa
rtm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
295.3185 553.0173 mt
(eq) [23.17 0 ] xshow
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
480.5507 495.1841 mt
(+)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
480.5507 799.3501 mt
(\320)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
49.9999 fts
/___FN3 cvsf
0 0 0 1. f4
F sa
480.5507 643.267 mt
(v)  show
T sa
rtm
rtm
stm
0 0 0 0 f4
np
14.5833 14.5833 445.8322 481.0344 ep
de
0 0 0 1. f4
2.0833 2.0833 sp
np
14.5833 14.5833 445.8322 481.0344 ep
ds
rtm
stm
0 0 0 1. f4
np
431.9563 480.8183 mt
431.9563 482.9017 li
410.9928 482.9017 li
410.9928 480.8183 li
431.9563 480.8183 li
cp
df
gs
0 0 0 1. f4
np
388.2062 481.7464 mt
428.3103 463.7451 li
410.0812 481.7464 li
428.3103 499.9755 li
388.2062 481.7464 li
cp
de
gr
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
41.6666 fts
/___FN3 cvsf
0 0 0 1. f4
F sa
401.6459 464.8623 mt
(i)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
2.0833 2.0833 sp
np
1.0417 458.5767 mt
21.8749 458.5767 li
34.3749 458.5767 mt
55.2082 458.5767 li
67.7082 458.5767 mt
88.5415 458.5767 li
101.0414 458.5767 mt
121.8747 458.5767 li
134.3747 458.5767 mt
155.208 458.5767 li
167.7079 458.5767 mt
188.5412 458.5767 li
201.0412 458.5767 mt
221.8745 458.5767 li
234.3744 458.5767 mt
255.2077 458.5767 li
267.7077 458.5767 mt
288.541 458.5767 li
301.0409 458.5767 mt
321.8742 458.5767 li
334.3742 458.5767 mt
355.2075 458.5767 li
367.7074 458.5767 mt
379.7476 458.5767 li
379.7476 467.3698 li
379.7476 479.8698 mt
379.7476 500.703 li
379.7476 513.203 mt
379.7476 534.0363 li
379.7476 546.5363 mt
379.7476 567.3695 li
379.7476 579.8695 mt
379.7476 600.7028 li
379.7476 613.2028 mt
379.7476 634.036 li
379.7476 646.536 mt
379.7476 667.3693 li
379.7476 679.8693 mt
379.7476 700.7025 li
379.7476 713.2025 mt
379.7476 734.0358 li
379.7476 746.5358 mt
379.7476 767.369 li
379.7476 779.869 mt
379.7476 800.7023 li
374.6622 808.1169 mt
353.829 808.1169 li
341.329 808.1169 mt
320.4957 808.1169 li
307.9957 808.1169 mt
287.1625 808.1169 li
274.6625 808.1169 mt
253.8292 808.1169 li
241.3292 808.1169 mt
220.496 808.1169 li
207.996 808.1169 mt
187.1627 808.1169 li
174.6627 808.1169 mt
153.8295 808.1169 li
141.3295 808.1169 mt
120.4962 808.1169 li
107.9962 808.1169 mt
87.1629 808.1169 li
74.663 808.1169 mt
53.8297 808.1169 li
41.3297 808.1169 mt
20.4964 808.1169 li
7.9965 808.1169 mt
1.0417 808.1169 li
1.0417 794.2384 li
1.0417 781.7385 mt
1.0417 760.9052 li
1.0417 748.4052 mt
1.0417 727.5719 li
1.0417 715.072 mt
1.0417 694.2387 li
1.0417 681.7387 mt
1.0417 660.9054 li
1.0417 648.4055 mt
1.0417 627.5722 li
1.0417 615.0722 mt
1.0417 594.2389 li
1.0417 581.739 mt
1.0417 560.9057 li
1.0417 548.4057 mt
1.0417 527.5724 li
1.0417 515.0725 mt
1.0417 494.2392 li
1.0417 481.7392 mt
1.0417 460.9059 li
ds
rtm
stm
0 0 0 0 f4
np
14.5833 14.5833 445.8322 783.117 ep
de
0 0 0 1. f4
np
14.5833 14.5833 445.8322 783.117 ep
ds
rtm
stm
0 0 0 0 f4
np
375.5179 30.7291 754.6837 380.7282 rp
de
0 0 0 1. f4
np
375.5179 30.7291 754.6837 380.7282 rp
ds
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
484.5082 175.3116 mt
(Sources) [27.79 23.17 23.17 13.88 20.83 23.17 0 ] xshow
T sa
rtm
stm
F sa
526.1747 216.9775 mt
(and) [23.17 23.17 0 ] xshow
T sa
rtm
stm
F sa
474.1119 258.6435 mt
(Resistors) [30.09 23.17 20.83 9.26 20.83 11.58 23.17 13.88 0 ] xshow
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
890.4475 66.0185 mt
(+)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
890.4475 370.1844 mt
(\320)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
49.9999 fts
/___FN3 cvsf
0 0 0 1. f4
F sa
890.4475 214.1014 mt
(v)  show
T sa
rtm
rtm
stm
0 0 0 0 f4
np
14.5833 14.5833 855.7291 51.8688 ep
de
0 0 0 1. f4
2.0833 2.0833 sp
np
14.5833 14.5833 855.7291 51.8688 ep
ds
rtm
stm
0 0 0 1. f4
np
841.8531 49.5694 mt
841.8531 51.6527 li
820.8896 51.6527 li
820.8896 49.5694 li
841.8531 49.5694 li
cp
df
gs
0 0 0 1. f4
np
798.1031 50.4974 mt
838.2072 32.4962 li
819.978 50.4974 li
838.2072 68.7265 li
798.1031 50.4974 li
cp
de
gr
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
41.6666 fts
/___FN3 cvsf
0 0 0 1. f4
F sa
813.5611 32.3273 mt
(i)  show
T sa
rtm
rtm
stm
0 0 0 0 f4
np
14.5833 14.5833 855.7291 353.9514 ep
de
0 0 0 1. f4
2.0833 2.0833 sp
np
14.5833 14.5833 855.7291 353.9514 ep
ds
rtm
stm
0 0 0 1. f4
np
755.1395 49.7555 mt
842.6393 49.7555 li
ds
rtm
stm
0 0 0 1. f4
np
755.1395 353.9214 mt
842.6393 353.9214 li
ds
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
 2 lc
 2 lj
np
878.9569 570.2138 mt
878.9569 482.714 li
ds
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
 0 lc
14.3 lm
 0 lj
np
878.9569 676.4635 mt
878.9569 783.087 li
ds
rtm
stm
0 0 0 0 f4
np
54.1665 54.1665 878.9569 622.297 ep
de
0.668 0.5781 0.6641 0.5078 f4
 2 lc
 2 lj
np
54.1665 54.1665 878.9569 622.297 ep
ds
rtm
stm
0 0 0 1. f4
np
880.2019 655.3991 mt
878.1186 655.3991 li
878.1186 626.6231 li
880.2019 626.6231 li
880.2019 655.3991 li
cp
df
gs
0 0 0 1. f4
np
879.3883 592.8992 mt
893.7437 633.0033 li
864.5771 633.0033 li
879.3883 592.8992 li
cp
de
gr
rtm
stm
0.668 0.5781 0.6641 0.5078 f4
np
1063.754 783.087 mt
1063.754 683.6872 li
1042.9207 671.1872 li
1080.4206 646.1873 li
1042.9207 621.1873 li
1080.4206 600.3541 li
1063.754 587.8541 li
1063.754 481.0044 li
ds
rtm
stm
0 0 0 1. f4
 0 lc
14.3 lm
 0 lj
np
878.5747 481.0044 mt
1147.324 481.0044 li
ds
rtm
stm
0 0 0 1. f4
np
878.5747 783.087 mt
1147.324 783.087 li
ds
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
1199.2989 497.2675 mt
(+)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
1199.2989 799.3501 mt
(\320)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
49.9999 fts
/___FN3 cvsf
0 0 0 1. f4
F sa
1199.2989 643.267 mt
(v)  show
T sa
rtm
rtm
stm
0 0 0 0 f4
np
14.5833 14.5833 1164.5805 483.1177 ep
de
0 0 0 1. f4
2.0833 2.0833 sp
np
14.5833 14.5833 1164.5805 483.1177 ep
ds
rtm
stm
0 0 0 1. f4
np
1150.7045 480.8183 mt
1150.7045 482.9017 li
1129.741 482.9017 li
1129.741 480.8183 li
1150.7045 480.8183 li
cp
df
gs
0 0 0 1. f4
np
1106.9545 481.7464 mt
1147.0585 463.7451 li
1128.8294 481.7464 li
1147.0585 499.9755 li
1106.9545 481.7464 li
cp
de
gr
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
41.6666 fts
/___FN3 cvsf
0 0 0 1. f4
F sa
1122.4125 463.5762 mt
(i)  show
T sa
rtm
rtm
stm
0 0 0 0 f4
np
14.5833 14.5833 1164.5805 783.117 ep
de
0 0 0 1. f4
2.0833 2.0833 sp
np
14.5833 14.5833 1164.5805 783.117 ep
ds
rtm
stm
0 0 0 1. f4
np
726.0399 454.41 mt
738.5399 454.41 li
759.3731 454.41 mt
771.8731 454.41 li
792.7064 454.41 mt
805.2064 454.41 li
826.0396 454.41 mt
838.5396 454.41 li
859.3729 454.41 mt
871.8729 454.41 li
892.7062 454.41 mt
905.2061 454.41 li
926.0394 454.41 mt
938.5394 454.41 li
959.3727 454.41 mt
971.8726 454.41 li
992.7059 454.41 mt
1005.2059 454.41 li
1026.0392 454.41 mt
1038.5391 454.41 li
1059.3724 454.41 mt
1071.8724 454.41 li
1092.7057 454.41 mt
1104.7458 454.41 li
1104.7458 454.8698 li
1104.7458 475.7031 mt
1104.7458 488.2031 li
1104.7458 509.0363 mt
1104.7458 521.5363 li
1104.7458 542.3696 mt
1104.7458 554.8696 li
1104.7458 575.7029 mt
1104.7458 588.2028 li
1104.7458 609.0361 mt
1104.7458 621.5361 li
1104.7458 642.3694 mt
1104.7458 654.8693 li
1104.7458 675.7026 mt
1104.7458 688.2026 li
1104.7458 709.0359 mt
1104.7458 721.5358 li
1104.7458 742.3691 mt
1104.7458 754.8691 li
1104.7458 775.7024 mt
1104.7458 788.2023 li
1099.6605 803.9503 mt
1087.1605 803.9503 li
1066.3272 803.9503 mt
1053.8273 803.9503 li
1032.994 803.9503 mt
1020.494 803.9503 li
999.6607 803.9503 mt
987.1608 803.9503 li
966.3275 803.9503 mt
953.8275 803.9503 li
932.9942 803.9503 mt
920.4942 803.9503 li
899.661 803.9503 mt
887.161 803.9503 li
866.3277 803.9503 mt
853.8277 803.9503 li
832.9945 803.9503 mt
820.4945 803.9503 li
799.6612 803.9503 mt
787.1612 803.9503 li
766.328 803.9503 mt
753.828 803.9503 li
732.9947 803.9503 mt
726.0399 803.9503 li
726.0399 798.4051 li
726.0399 777.5718 mt
726.0399 765.0718 li
726.0399 744.2386 mt
726.0399 731.7386 li
726.0399 710.9053 mt
726.0399 698.4053 li
726.0399 677.5721 mt
726.0399 665.0721 li
726.0399 644.2388 mt
726.0399 631.7388 li
726.0399 610.9056 mt
726.0399 598.4056 li
726.0399 577.5723 mt
726.0399 565.0723 li
726.0399 544.2391 mt
726.0399 531.7391 li
726.0399 510.9058 mt
726.0399 498.4058 li
726.0399 477.5725 mt
726.0399 465.0726 li
ds
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
962.0599 634.7671 mt
(R)  show
T sa
rtm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
991.1501 646.7671 mt
(eq) [23.17 0 ] xshow
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
762.5254 623.8845 mt
(i)  show
T sa
rtm
0 0 0 1. f4
0.1250 0.1250 sp
0.668 0.5781 0.6641 0.5078 f4
stm
0.668 0.5781 0.6641 0.5078 f4
F sa
770.7824 638.8845 mt
(eq) [23.17 0 ] xshow
T sa
rtm
rtm
stm
0 0 0 1. f4
np
607.4921 394.7435 mt
608.7118 396.4324 li
561.0513 430.854 li
559.8315 429.165 li
607.4921 394.7435 li
cp
df
gs
0 0 0 1. f4
np
532.9683 449.5703 mt
557.075 414.4516 li
574.1521 438.0965 li
532.9683 449.5703 li
cp
de
gr
rtm
stm
0 0 0 1. f4
np
632.492 396.4324 mt
633.7118 394.7435 li
681.3723 429.165 li
680.1526 430.854 li
632.492 396.4324 li
cp
df
gs
0 0 0 1. f4
np
708.2356 449.5703 mt
684.1289 414.4516 li
667.0518 438.0965 li
708.2356 449.5703 li
cp
de
gr
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
55.4991 873.503 mt
(Th\216venin) [25.45 23.17 23.17 20.83 23.17 23.17 9.26 0 ] xshow
T sa
rtm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
226.9058 873.503 mt
( Equivalent) [11.58 27.79 23.17 23.17 9.26 20.83 23.17 9.26 23.17 23.17 0 ] xshow
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
737.7891 869.3363 mt
(Mayer-Norton Equivalent) [34.71 23.17 20.83 23.17 13.88 13.88 30.09 23.17 13.88 11.58 23.17 23.17 11.58 27.79 23.17 23.17 9.26 20.83 23.17 9.26 23.17 23.17 0 ] xshow
T sa
rtm
rtm
terminate
