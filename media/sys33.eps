%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox:  0 0 252 85 
%%Title: (systems.CNV) 
%%Creator: Canvas (7.0.2) 
%%CreationDate: (07/26/01 @ 09:16 AM) 
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ CVDict
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%EndComments
%%BeginProlog 
%%BeginResource: procset CVDict
%%Title: Deneba standard graphics
%%Version: 1.02
%%CreationDate: 10/14/99
%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserved
userdict /CVDict 200 dict put
CVDict begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
level2 not { /xshow {
0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshow
pop pop pop pop} def } if
/initialize
{CVDict
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{/sa /setstrokeadjust load def
/li /lineto load def
/mt /moveto load def
/ct /curveto load def
/lh { currentpoint exch pop lineto}bind def
/lv { currentpoint pop exch lineto}bind def}
{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind def
userdict /StrokeAdjustDict 100 dict put
StrokeAdjustDict begin
/_xl
{transform
.25 sub round .25 add exch
.25 sub round .25 add exch
itransform
}bind def
/li{ _xl lineto}bind def
/mt{ _xl moveto}bind def
/ct{ _xl curveto}bind def
/lh { dup _xl pop currentpoint exch pop lineto}bind def
/lv { dup _xl pop currentpoint pop exch lineto}bind def
/rp{_xl/cv_b xdf/cv_r xdf
_xl/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath
}bind def
end}ifelse}def
/terminate
{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}if
currentdict CVDict eq{end}if}def
/mxMax 64 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def
/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def
/scl { 72 div exch 72 div exch scale } def
/scli { 72 exch div exch 72 exch div exch scale } def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 3 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/_ds 0 def
/hct false def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/ia 0 def
/ix 0 def
/ixn 1 def
/MultipleDataSources false def 
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
CVDict /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 30 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/_cv_mh{currentpoint exch pop moveto}def
/_cv_mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{setgray}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix _ds image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[/_ds load /exec load /dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[/_ds load /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def
/doclutimage{/hival 255 def 
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/hascolor true def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{
level2{image}{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}ifelse}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{$i setmatrix translate scale
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
doclutimage} def
/cd{$i setmatrix translate scale
level2{_imagedict /ColorSpace get setcolorspace}if
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_imagedict begin
/ImageMatrix _imatrix def
currentdict end
doimage} def
/im{$i setmatrix translate scale 
level2{/DeviceGray setcolorspace 0 setgray}if
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_imagedict begin
%/Decode [0 1] def  
%/Width _w def
%/Height _h def
/ImageMatrix _imatrix def
currentdict end 
doimage }def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{$i setmatrix translate scale 
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_w _h false _imatrix 5 -1 roll _ds imagemask}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/rf{/_encodindex xdf
FontDirectory exch known {
findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
currentdict end
definefont pop }{pop pop}ifelse} def
/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch 
_fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{CVDict begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{boldproc} exch
mkFT pop pop pop exch pop
}ifelse }def
/mo{dup dhOdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{outproc} exch
mkFT pop pop pop exch pop
}ifelse }def
/ms{dup dhSdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{ShadChar} exch
mkFT  pop pop pop exch pop
}ifelse }def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentcolor currentcolorspace 1.0 setgray
chrst 0 0 moveto show setcolorspace setcolor
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def
/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs 
scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/DSIEndPaintProc{currentdict end}def
/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 
	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 
	/FormType 1 def /PaintProc { /pp get exec } def /pp} def
/DSIEndPaintSubProc {bind def end pD} def
/iaa {/ix ix ixn add def} def
/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def
/ias {/st0 ia ix get def iaa st0} def
/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def
/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} def
initialize
end
%%EndResource
CVDict begin 0 id 1 fd
_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put
_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
end
%%EndProlog 
%%BeginSetup 
CVDict begin

/___FN3 /Helvetica dup  dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1 }{-1} ifelse end} {pop -1} ifelse rf
0 id
1 fd
0 85 translate
300 -300 scli
%%EndSetup 
%%BeginPageSetup 
pm
%%EndPageSetup
/DeviceCMYK scs
0 0 0 1. f4
0.1250 0.1250 sp
 0 lc
 2 lj
T sa
%page rect: 1881 544 2133 627 
stm
0 0 0 1. f4
2.0833 2.0833 sp
14.3 lm
 0 lj
np
200.1768 133.3329 mt
200.1768 149.9996 li
200.1768 166.6662 mt
200.1768 183.3328 li
200.1768 199.9994 mt
200.1768 216.6661 li
200.1768 233.3327 mt
200.1768 249.9993 li
200.1768 266.666 mt
200.1768 281.2492 li
200.1768 281.2492 li
ds
rtm
stm
0 0 0 1. f4
np
52.2605 135.4163 mt
52.2605 152.0829 li
52.2605 168.7495 mt
52.2605 185.4162 li
52.2605 202.0828 mt
52.2605 218.7494 li
52.2605 235.416 mt
52.2605 252.0827 li
52.2605 268.7493 mt
52.2605 283.3326 li
52.2605 283.3326 li
ds
rtm
stm
0 0 0 1. f4
np
105.6443 211.1994 mt
105.6443 209.1161 li
283.1193 209.1161 li
283.1193 211.1994 li
105.6443 211.1994 li
cp
df
gs
0 0 0 1. f4
np
316.8432 210.3856 mt
276.7391 224.741 li
276.7391 195.5744 li
316.8432 210.3856 li
cp
de
gr
rtm
stm
0 0 0 1. f4
np
112.9387 224.9994 mt
110.8554 224.9994 li
110.8554 33.7238 li
112.9387 33.7238 li
112.9387 224.9994 li
cp
df
gs
0 0 0 1. f4
np
112.1251 -0. mt
126.4805 40.104 li
97.3139 40.104 li
112.1251 -0. li
cp
de
gr
rtm
stm
0 0 0 1. f4
np
117.3338 201.17 mt
118.9547 202.4789 li
22.1744 322.3324 li
20.5535 321.0235 li
117.3338 201.17 li
cp
df
gs
0 0 0 1. f4
np
0. 347.7728 mt
14.0265 307.5522 li
36.7183 325.8759 li
0. 347.7728 li
cp
de
gr
rtm
stm
0.9492 0.625 0.0117 0 f4
np
11.4583 11.4583 112.677 210.1578 ep
de
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 260.5933 210.1578 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 260.5933 210.1578 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 112.677 59.3748 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 112.677 59.3748 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 258.51 59.3748 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 258.51 59.3748 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 53.3021 280.9909 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 53.3021 280.9909 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 201.2184 280.9909 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 201.2184 280.9909 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 53.3021 133.0746 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 53.3021 133.0746 ep
ds
rtm
stm
0.9492 0.625 0.0117 0 f4
np
11.4583 11.4583 201.2184 133.0746 ep
de
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
41.6666 fts
/___FN3 cvsf
0 0 0 1. f4
F sa
107.427 259.1655 mt
(0)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
74.0938 75.8326 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
9.5106 294.5821 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
247.01 263.3322 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
np
835.8508 211.1994 mt
835.8508 209.1161 li
1013.3258 209.1161 li
1013.3258 211.1994 li
835.8508 211.1994 li
cp
df
gs
0 0 0 1. f4
np
1047.0497 210.3856 mt
1006.9457 224.741 li
1006.9457 195.5744 li
1047.0497 210.3856 li
cp
de
gr
rtm
stm
0 0 0 1. f4
np
843.1453 224.9994 mt
841.062 224.9994 li
841.062 33.7238 li
843.1453 33.7238 li
843.1453 224.9994 li
cp
df
gs
0 0 0 1. f4
np
842.3316 -0. mt
856.6871 40.104 li
827.5205 40.104 li
842.3316 -0. li
cp
de
gr
rtm
stm
0 0 0 1. f4
np
847.5404 201.17 mt
849.1612 202.4789 li
752.381 322.3324 li
750.7601 321.0235 li
847.5404 201.17 li
cp
df
gs
0 0 0 1. f4
np
730.2066 347.7728 mt
744.2331 307.5522 li
766.9249 325.8759 li
730.2066 347.7728 li
cp
de
gr
rtm
stm
0.9453 0.6133 0.0078 0 f4
2.0833 2.0833 sp
np
11.4583 11.4583 988.7165 59.3748 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 783.5087 280.9909 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 783.5087 280.9909 ep
ds
rtm
stm
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 931.425 280.9909 ep
ds
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
841.8002 254.9989 mt
(0)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
804.3003 75.8326 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
739.7171 294.5821 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
977.2165 263.3322 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
3.1250 3.1250 sp
np
778.3006 272.9159 mt
778.3006 237.4894 805.5763 208.3325 838.7169 208.3325 ct
ds
gs
0 0 0 1. f4
np
766.7397 234.3755 mt
766.6995 234.4031 li
778.1714 271.6391 li
778.1714 271.6391 788.2757 242.4894 789.9019 234.6523 ct
787.7528 237.9793 781.6803 245.2633 778.4083 245.2633 ct
775.0466 245.2633 768.9005 237.8639 766.7397 234.3755 ct
cp
de
gr
rtm
stm
0 0 0 1. f4
np
841.3951 207.1418 mt
862.19 166.3278 912.8958 149.8516 953.7097 170.6465 ct
970.9429 179.4269 983.3072 192.2301 991.4814 209.7589 ct
ds
gs
0 0 0 1. f4
np
984.6686 172.7084 mt
984.7095 172.7181 li
991.0374 208.5569 li
991.0374 208.5568 971.893 187.1184 967.5566 180.9765 ct
970.4821 183.0781 977.9039 187.205 980.3368 186.0705 ct
982.8364 184.9049 984.4538 176.4425 984.6686 172.7084 ct
cp
de
gr
rtm
stm
0 0 0 1. f4
np
836.3102 211.0369 mt
795.4963 190.242 779.0201 139.5362 799.8149 98.7223 ct
808.5953 81.4891 821.3986 69.1248 838.9274 60.9506 ct
ds
gs
0 0 0 1. f4
np
801.8768 67.7633 mt
801.8865 67.7224 li
837.7253 61.3945 li
837.7253 61.3945 816.2869 80.539 810.1449 84.8754 ct
812.2465 81.9498 816.3735 74.5281 815.239 72.0952 ct
814.0733 69.5956 805.6109 67.9781 801.8768 67.7633 ct
cp
de
gr
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 783.5087 133.0746 ep
de
0.9453 0.6133 0.0078 0 f4
2.0833 2.0833 sp
np
11.4583 11.4583 783.5087 133.0746 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 990.7998 210.1578 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 990.7998 210.1578 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 842.8835 59.3748 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 842.8835 59.3748 ep
ds
rtm
stm
0 0 0 0 f4
8.3333 8.3333 sp
np
932.9134 122.767 mt
912.1185 81.953 861.4127 65.4768 820.5988 86.2717 ct
803.3657 95.0521 791.0013 107.8553 782.8271 125.3842 ct
ds
rtm
stm
0 0 0 1. f4
3.1250 3.1250 sp
np
931.8717 123.8086 mt
911.0769 82.9947 860.3711 66.5185 819.5572 87.3134 ct
802.324 96.0938 789.9596 108.897 781.7855 126.4258 ct
ds
gs
0 0 0 1. f4
np
788.5982 89.3752 mt
788.5573 89.3849 li
782.2294 125.2237 li
782.2294 125.2237 801.3739 103.7853 805.7103 97.6434 ct
802.7847 99.745 795.363 103.8719 792.9301 102.7374 ct
790.4304 101.5717 788.813 93.1093 788.5982 89.3752 ct
cp
de
gr
rtm
stm
0 0 0 1. f4
np
993.3154 62.4283 mt
1026.6486 89.8332 962.0654 129.0948 928.3 129.1665 ct
ds
gs
0 0 0 1. f4
np
1015.7435 95.8338 mt
1015.6967 95.8473 li
994.2196 63.3387 li
994.2196 63.3387 1023.1529 74.0456 1030.2394 77.7665 ct
1026.3046 77.3137 1016.8217 77.3786 1014.7438 79.906 ct
1012.6088 82.5028 1014.4213 91.9493 1015.7435 95.8338 ct
cp
de
gr
rtm
stm
0 0 0 1. f4
np
923.81 133.0602 mt
882.9961 153.8551 866.5198 204.5609 887.3147 245.3748 ct
896.0951 262.608 908.8984 274.9723 926.4272 283.1465 ct
ds
gs
0 0 0 1. f4
np
889.3766 276.3337 mt
889.3863 276.3746 li
925.2251 282.7025 li
925.225 282.7025 903.7867 263.5581 897.6447 259.2217 ct
899.7463 262.1472 903.8733 269.569 902.7388 272.0018 ct
901.5731 274.5015 893.1107 276.1189 889.3766 276.3337 ct
cp
de
gr
rtm
stm
0.9492 0.625 0.0117 0 f4
np
11.4583 11.4583 931.425 133.0746 ep
de
rtm
stm
0.9492 0.625 0.0117 0 f4
np
11.4583 11.4583 842.8835 210.1578 ep
de
rtm
stm
0 0 0 1. f4
np
470.7476 211.1994 mt
470.7476 209.1161 li
648.2225 209.1161 li
648.2225 211.1994 li
470.7476 211.1994 li
cp
df
gs
0 0 0 1. f4
np
681.9464 210.3856 mt
641.8424 224.741 li
641.8424 195.5744 li
681.9464 210.3856 li
cp
de
gr
rtm
stm
0 0 0 1. f4
np
478.042 224.9994 mt
475.9587 224.9994 li
475.9587 33.7238 li
478.042 33.7238 li
478.042 224.9994 li
cp
df
gs
0 0 0 1. f4
np
477.2284 -0. mt
491.5838 40.104 li
462.4172 40.104 li
477.2284 -0. li
cp
de
gr
rtm
stm
0 0 0 1. f4
np
482.4371 201.17 mt
484.058 202.4789 li
387.2777 322.3324 li
385.6568 321.0235 li
482.4371 201.17 li
cp
df
gs
0 0 0 1. f4
np
365.1033 347.7728 mt
379.1298 307.5522 li
401.8216 325.8759 li
365.1033 347.7728 li
cp
de
gr
rtm
stm
0.9492 0.625 0.0117 0 f4
np
11.4583 11.4583 477.7803 210.1578 ep
de
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
435.0304 217.4989 mt
(0)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
439.197 75.8326 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
374.6138 294.5821 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
0.1250 0.1250 sp
0 0 0 1. f4
stm
0 0 0 1. f4
F sa
612.1133 263.3322 mt
(1)  show
T sa
rtm
rtm
stm
0 0 0 1. f4
4.1667 4.1667 sp
11.5 lm
 0 lj
np
475.6969 210.4161 mt
475.6969 58.3331 li
623.6132 58.3331 li
565.28 133.3329 li
ds
gs
0 0 0 1. f4
np
595.9683 111.0157 mt
595.9812 111.0587 li
566.156 132.3977 li
566.156 132.3977 575.7919 105.0277 579.166 98.2784 ct
578.7817 101.9588 578.9228 110.7806 581.2737 112.609 ct
583.6891 114.4876 592.3938 112.4078 595.9683 111.0157 ct
cp
de
gr
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 625.6966 210.1578 ep
de
0.9453 0.6133 0.0078 0 f4
2.0833 2.0833 sp
14.3 lm
 0 lj
np
11.4583 11.4583 625.6966 210.1578 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 477.7803 59.3748 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 477.7803 59.3748 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 623.6132 59.3748 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 623.6132 59.3748 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 418.4054 280.9909 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 418.4054 280.9909 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 566.3217 280.9909 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 566.3217 280.9909 ep
ds
rtm
stm
0 0 0 0 f4
np
11.4583 11.4583 418.4054 133.0746 ep
de
0.9453 0.6133 0.0078 0 f4
np
11.4583 11.4583 418.4054 133.0746 ep
ds
rtm
stm
0.9492 0.625 0.0117 0 f4
np
11.4583 11.4583 566.3217 133.0746 ep
de
rtm
stm
0 0 0 1. f4
3.1250 3.1250 sp
np
475.6969 158.3329 mt
475.6969 99.9997 li
ds
gs
0 0 0 1. f4
np
465.1741 136.4569 mt
465.1375 136.4309 li
475.5795 101.276 li
475.5795 101.276 484.7767 128.7965 486.257 136.1956 ct
484.3008 133.0545 478.7734 126.1776 475.7952 126.1776 ct
472.7353 126.1776 467.141 133.1635 465.1741 136.4569 ct
cp
de
gr
rtm
stm
0 0 0 1. f4
np
521.5301 58.3331 mt
579.8633 58.3331 li
ds
gs
0 0 0 1. f4
np
543.4061 47.8103 mt
543.4322 47.7737 li
578.5871 58.2157 li
578.587 58.2157 551.0665 67.4129 543.6674 68.8932 ct
546.8085 66.937 553.6854 61.4096 553.6854 58.4314 ct
553.6854 55.3714 546.6995 49.7772 543.4061 47.8103 ct
cp
de
gr
rtm
terminate
